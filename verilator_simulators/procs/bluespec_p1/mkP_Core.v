//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
//
//
//
// Ports:
// Name                         I/O  size props
// master0_awvalid                O     1 const
// master0_awid                   O     6 const
// master0_awaddr                 O    64 const
// master0_awlen                  O     8 const
// master0_awsize                 O     3 const
// master0_awburst                O     2 const
// master0_awlock                 O     1 const
// master0_awcache                O     4 const
// master0_awprot                 O     3 const
// master0_awqos                  O     4 const
// master0_awregion               O     4 const
// master0_wvalid                 O     1 const
// master0_wdata                  O    64 const
// master0_wstrb                  O     8 const
// master0_wlast                  O     1 const
// master0_bready                 O     1 const
// master0_arvalid                O     1 const
// master0_arid                   O     6 const
// master0_araddr                 O    64 const
// master0_arlen                  O     8 const
// master0_arsize                 O     3 const
// master0_arburst                O     2 const
// master0_arlock                 O     1 const
// master0_arcache                O     4 const
// master0_arprot                 O     3 const
// master0_arqos                  O     4 const
// master0_arregion               O     4 const
// master0_rready                 O     1 const
// master1_awvalid                O     1 const
// master1_awid                   O     6 const
// master1_awaddr                 O    64 const
// master1_awlen                  O     8 const
// master1_awsize                 O     3 const
// master1_awburst                O     2 const
// master1_awlock                 O     1 const
// master1_awcache                O     4 const
// master1_awprot                 O     3 const
// master1_awqos                  O     4 const
// master1_awregion               O     4 const
// master1_wvalid                 O     1 const
// master1_wdata                  O    64 const
// master1_wstrb                  O     8 const
// master1_wlast                  O     1 const
// master1_bready                 O     1 const
// master1_arvalid                O     1 const
// master1_arid                   O     6 const
// master1_araddr                 O    64 const
// master1_arlen                  O     8 const
// master1_arsize                 O     3 const
// master1_arburst                O     2 const
// master1_arlock                 O     1 const
// master1_arcache                O     4 const
// master1_arprot                 O     3 const
// master1_arqos                  O     4 const
// master1_arregion               O     4 const
// master1_rready                 O     1 const
// jtag_tdo                       O     1 const
// CLK_jtag_tclk_out              O     1
// CLK_GATE_jtag_tclk_out         O     1 const
// CLK                            I     1
// RST_N                          I     1 unused
// master0_awready                I     1 unused
// master0_wready                 I     1 unused
// master0_bvalid                 I     1 unused
// master0_bid                    I     6 unused
// master0_bresp                  I     2 unused
// master0_arready                I     1 unused
// master0_rvalid                 I     1 unused
// master0_rid                    I     6 unused
// master0_rdata                  I    64 unused
// master0_rresp                  I     2 unused
// master0_rlast                  I     1 unused
// master1_awready                I     1 unused
// master1_wready                 I     1 unused
// master1_bvalid                 I     1 unused
// master1_bid                    I     6 unused
// master1_bresp                  I     2 unused
// master1_arready                I     1 unused
// master1_rvalid                 I     1 unused
// master1_rid                    I     6 unused
// master1_rdata                  I    64 unused
// master1_rresp                  I     2 unused
// master1_rlast                  I     1 unused
// cpu_external_interrupt_req     I    16 unused
// jtag_tdi                       I     1 unused
// jtag_tms                       I     1 unused
// jtag_tclk                      I     1 unused
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkP_Core(CLK,
		RST_N,

		master0_awvalid,

		master0_awid,

		master0_awaddr,

		master0_awlen,

		master0_awsize,

		master0_awburst,

		master0_awlock,

		master0_awcache,

		master0_awprot,

		master0_awqos,

		master0_awregion,

		master0_awready,

		master0_wvalid,

		master0_wdata,

		master0_wstrb,

		master0_wlast,

		master0_wready,

		master0_bvalid,
		master0_bid,
		master0_bresp,

		master0_bready,

		master0_arvalid,

		master0_arid,

		master0_araddr,

		master0_arlen,

		master0_arsize,

		master0_arburst,

		master0_arlock,

		master0_arcache,

		master0_arprot,

		master0_arqos,

		master0_arregion,

		master0_arready,

		master0_rvalid,
		master0_rid,
		master0_rdata,
		master0_rresp,
		master0_rlast,

		master0_rready,

		master1_awvalid,

		master1_awid,

		master1_awaddr,

		master1_awlen,

		master1_awsize,

		master1_awburst,

		master1_awlock,

		master1_awcache,

		master1_awprot,

		master1_awqos,

		master1_awregion,

		master1_awready,

		master1_wvalid,

		master1_wdata,

		master1_wstrb,

		master1_wlast,

		master1_wready,

		master1_bvalid,
		master1_bid,
		master1_bresp,

		master1_bready,

		master1_arvalid,

		master1_arid,

		master1_araddr,

		master1_arlen,

		master1_arsize,

		master1_arburst,

		master1_arlock,

		master1_arcache,

		master1_arprot,

		master1_arqos,

		master1_arregion,

		master1_arready,

		master1_rvalid,
		master1_rid,
		master1_rdata,
		master1_rresp,
		master1_rlast,

		master1_rready,

		cpu_external_interrupt_req,

		jtag_tdi,

		jtag_tms,

		jtag_tclk,

		jtag_tdo,

		CLK_jtag_tclk_out,
		CLK_GATE_jtag_tclk_out);
  input  CLK;
  input  RST_N;

  // value method master0_m_awvalid
  output master0_awvalid;

  // value method master0_m_awid
  output [5 : 0] master0_awid;

  // value method master0_m_awaddr
  output [63 : 0] master0_awaddr;

  // value method master0_m_awlen
  output [7 : 0] master0_awlen;

  // value method master0_m_awsize
  output [2 : 0] master0_awsize;

  // value method master0_m_awburst
  output [1 : 0] master0_awburst;

  // value method master0_m_awlock
  output master0_awlock;

  // value method master0_m_awcache
  output [3 : 0] master0_awcache;

  // value method master0_m_awprot
  output [2 : 0] master0_awprot;

  // value method master0_m_awqos
  output [3 : 0] master0_awqos;

  // value method master0_m_awregion
  output [3 : 0] master0_awregion;

  // value method master0_m_awuser

  // action method master0_m_awready
  input  master0_awready;

  // value method master0_m_wvalid
  output master0_wvalid;

  // value method master0_m_wdata
  output [63 : 0] master0_wdata;

  // value method master0_m_wstrb
  output [7 : 0] master0_wstrb;

  // value method master0_m_wlast
  output master0_wlast;

  // value method master0_m_wuser

  // action method master0_m_wready
  input  master0_wready;

  // action method master0_m_bvalid
  input  master0_bvalid;
  input  [5 : 0] master0_bid;
  input  [1 : 0] master0_bresp;

  // value method master0_m_bready
  output master0_bready;

  // value method master0_m_arvalid
  output master0_arvalid;

  // value method master0_m_arid
  output [5 : 0] master0_arid;

  // value method master0_m_araddr
  output [63 : 0] master0_araddr;

  // value method master0_m_arlen
  output [7 : 0] master0_arlen;

  // value method master0_m_arsize
  output [2 : 0] master0_arsize;

  // value method master0_m_arburst
  output [1 : 0] master0_arburst;

  // value method master0_m_arlock
  output master0_arlock;

  // value method master0_m_arcache
  output [3 : 0] master0_arcache;

  // value method master0_m_arprot
  output [2 : 0] master0_arprot;

  // value method master0_m_arqos
  output [3 : 0] master0_arqos;

  // value method master0_m_arregion
  output [3 : 0] master0_arregion;

  // value method master0_m_aruser

  // action method master0_m_arready
  input  master0_arready;

  // action method master0_m_rvalid
  input  master0_rvalid;
  input  [5 : 0] master0_rid;
  input  [63 : 0] master0_rdata;
  input  [1 : 0] master0_rresp;
  input  master0_rlast;

  // value method master0_m_rready
  output master0_rready;

  // value method master1_m_awvalid
  output master1_awvalid;

  // value method master1_m_awid
  output [5 : 0] master1_awid;

  // value method master1_m_awaddr
  output [63 : 0] master1_awaddr;

  // value method master1_m_awlen
  output [7 : 0] master1_awlen;

  // value method master1_m_awsize
  output [2 : 0] master1_awsize;

  // value method master1_m_awburst
  output [1 : 0] master1_awburst;

  // value method master1_m_awlock
  output master1_awlock;

  // value method master1_m_awcache
  output [3 : 0] master1_awcache;

  // value method master1_m_awprot
  output [2 : 0] master1_awprot;

  // value method master1_m_awqos
  output [3 : 0] master1_awqos;

  // value method master1_m_awregion
  output [3 : 0] master1_awregion;

  // value method master1_m_awuser

  // action method master1_m_awready
  input  master1_awready;

  // value method master1_m_wvalid
  output master1_wvalid;

  // value method master1_m_wdata
  output [63 : 0] master1_wdata;

  // value method master1_m_wstrb
  output [7 : 0] master1_wstrb;

  // value method master1_m_wlast
  output master1_wlast;

  // value method master1_m_wuser

  // action method master1_m_wready
  input  master1_wready;

  // action method master1_m_bvalid
  input  master1_bvalid;
  input  [5 : 0] master1_bid;
  input  [1 : 0] master1_bresp;

  // value method master1_m_bready
  output master1_bready;

  // value method master1_m_arvalid
  output master1_arvalid;

  // value method master1_m_arid
  output [5 : 0] master1_arid;

  // value method master1_m_araddr
  output [63 : 0] master1_araddr;

  // value method master1_m_arlen
  output [7 : 0] master1_arlen;

  // value method master1_m_arsize
  output [2 : 0] master1_arsize;

  // value method master1_m_arburst
  output [1 : 0] master1_arburst;

  // value method master1_m_arlock
  output master1_arlock;

  // value method master1_m_arcache
  output [3 : 0] master1_arcache;

  // value method master1_m_arprot
  output [2 : 0] master1_arprot;

  // value method master1_m_arqos
  output [3 : 0] master1_arqos;

  // value method master1_m_arregion
  output [3 : 0] master1_arregion;

  // value method master1_m_aruser

  // action method master1_m_arready
  input  master1_arready;

  // action method master1_m_rvalid
  input  master1_rvalid;
  input  [5 : 0] master1_rid;
  input  [63 : 0] master1_rdata;
  input  [1 : 0] master1_rresp;
  input  master1_rlast;

  // value method master1_m_rready
  output master1_rready;

  // action method interrupt_reqs
  input  [15 : 0] cpu_external_interrupt_req;

  // action method jtag_tdi
  input  jtag_tdi;

  // action method jtag_tms
  input  jtag_tms;

  // action method jtag_tclk
  input  jtag_tclk;

  // value method jtag_tdo
  output jtag_tdo;

  // oscillator and gates for output clock CLK_jtag_tclk_out
  output CLK_jtag_tclk_out;
  output CLK_GATE_jtag_tclk_out;

  // signals for module outputs
  wire [63 : 0] master0_araddr,
		master0_awaddr,
		master0_wdata,
		master1_araddr,
		master1_awaddr,
		master1_wdata;
  wire [7 : 0] master0_arlen,
	       master0_awlen,
	       master0_wstrb,
	       master1_arlen,
	       master1_awlen,
	       master1_wstrb;
  wire [5 : 0] master0_arid, master0_awid, master1_arid, master1_awid;
  wire [3 : 0] master0_arcache,
	       master0_arqos,
	       master0_arregion,
	       master0_awcache,
	       master0_awqos,
	       master0_awregion,
	       master1_arcache,
	       master1_arqos,
	       master1_arregion,
	       master1_awcache,
	       master1_awqos,
	       master1_awregion;
  wire [2 : 0] master0_arprot,
	       master0_arsize,
	       master0_awprot,
	       master0_awsize,
	       master1_arprot,
	       master1_arsize,
	       master1_awprot,
	       master1_awsize;
  wire [1 : 0] master0_arburst,
	       master0_awburst,
	       master1_arburst,
	       master1_awburst;
  wire CLK_GATE_jtag_tclk_out,
       CLK_jtag_tclk_out,
       jtag_tdo,
       master0_arlock,
       master0_arvalid,
       master0_awlock,
       master0_awvalid,
       master0_bready,
       master0_rready,
       master0_wlast,
       master0_wvalid,
       master1_arlock,
       master1_arvalid,
       master1_awlock,
       master1_awvalid,
       master1_bready,
       master1_rready,
       master1_wlast,
       master1_wvalid;

  // oscillator and gates for output clock CLK_jtag_tclk_out
  assign CLK_jtag_tclk_out = CLK ;
  assign CLK_GATE_jtag_tclk_out = 1'd1 ;

  // value method master0_m_awvalid
  assign master0_awvalid = 1'h0 ;

  // value method master0_m_awid
  assign master0_awid = 6'h2A ;

  // value method master0_m_awaddr
  assign master0_awaddr = 64'hAAAAAAAAAAAAAAAA ;

  // value method master0_m_awlen
  assign master0_awlen = 8'hAA ;

  // value method master0_m_awsize
  assign master0_awsize = 3'h2 ;

  // value method master0_m_awburst
  assign master0_awburst = 2'h2 ;

  // value method master0_m_awlock
  assign master0_awlock = 1'h0 ;

  // value method master0_m_awcache
  assign master0_awcache = 4'hA ;

  // value method master0_m_awprot
  assign master0_awprot = 3'h2 ;

  // value method master0_m_awqos
  assign master0_awqos = 4'hA ;

  // value method master0_m_awregion
  assign master0_awregion = 4'hA ;

  // value method master0_m_wvalid
  assign master0_wvalid = 1'h0 ;

  // value method master0_m_wdata
  assign master0_wdata = 64'hAAAAAAAAAAAAAAAA ;

  // value method master0_m_wstrb
  assign master0_wstrb = 8'hAA ;

  // value method master0_m_wlast
  assign master0_wlast = 1'h0 ;

  // value method master0_m_bready
  assign master0_bready = 1'h0 ;

  // value method master0_m_arvalid
  assign master0_arvalid = 1'h0 ;

  // value method master0_m_arid
  assign master0_arid = 6'h2A ;

  // value method master0_m_araddr
  assign master0_araddr = 64'hAAAAAAAAAAAAAAAA ;

  // value method master0_m_arlen
  assign master0_arlen = 8'hAA ;

  // value method master0_m_arsize
  assign master0_arsize = 3'h2 ;

  // value method master0_m_arburst
  assign master0_arburst = 2'h2 ;

  // value method master0_m_arlock
  assign master0_arlock = 1'h0 ;

  // value method master0_m_arcache
  assign master0_arcache = 4'hA ;

  // value method master0_m_arprot
  assign master0_arprot = 3'h2 ;

  // value method master0_m_arqos
  assign master0_arqos = 4'hA ;

  // value method master0_m_arregion
  assign master0_arregion = 4'hA ;

  // value method master0_m_rready
  assign master0_rready = 1'h0 ;

  // value method master1_m_awvalid
  assign master1_awvalid = 1'h0 ;

  // value method master1_m_awid
  assign master1_awid = 6'h2A ;

  // value method master1_m_awaddr
  assign master1_awaddr = 64'hAAAAAAAAAAAAAAAA ;

  // value method master1_m_awlen
  assign master1_awlen = 8'hAA ;

  // value method master1_m_awsize
  assign master1_awsize = 3'h2 ;

  // value method master1_m_awburst
  assign master1_awburst = 2'h2 ;

  // value method master1_m_awlock
  assign master1_awlock = 1'h0 ;

  // value method master1_m_awcache
  assign master1_awcache = 4'hA ;

  // value method master1_m_awprot
  assign master1_awprot = 3'h2 ;

  // value method master1_m_awqos
  assign master1_awqos = 4'hA ;

  // value method master1_m_awregion
  assign master1_awregion = 4'hA ;

  // value method master1_m_wvalid
  assign master1_wvalid = 1'h0 ;

  // value method master1_m_wdata
  assign master1_wdata = 64'hAAAAAAAAAAAAAAAA ;

  // value method master1_m_wstrb
  assign master1_wstrb = 8'hAA ;

  // value method master1_m_wlast
  assign master1_wlast = 1'h0 ;

  // value method master1_m_bready
  assign master1_bready = 1'h0 ;

  // value method master1_m_arvalid
  assign master1_arvalid = 1'h0 ;

  // value method master1_m_arid
  assign master1_arid = 6'h2A ;

  // value method master1_m_araddr
  assign master1_araddr = 64'hAAAAAAAAAAAAAAAA ;

  // value method master1_m_arlen
  assign master1_arlen = 8'hAA ;

  // value method master1_m_arsize
  assign master1_arsize = 3'h2 ;

  // value method master1_m_arburst
  assign master1_arburst = 2'h2 ;

  // value method master1_m_arlock
  assign master1_arlock = 1'h0 ;

  // value method master1_m_arcache
  assign master1_arcache = 4'hA ;

  // value method master1_m_arprot
  assign master1_arprot = 3'h2 ;

  // value method master1_m_arqos
  assign master1_arqos = 4'hA ;

  // value method master1_m_arregion
  assign master1_arregion = 4'hA ;

  // value method master1_m_rready
  assign master1_rready = 1'h0 ;

  // value method jtag_tdo
  assign jtag_tdo = 1'd0 ;
endmodule  // mkP_Core

