#!/bin/sh
set -e


debug_shell() {
    echo 'debian stage1: an error occurred; launching debug shell'
    exec /bin/sh
}
trap debug_shell EXIT


# Basic system setup

mount -v -t devtmpfs none /dev
mkdir -p /dev/pts
mount -v -t devpts devpts /dev/pts
mount -v -t proc proc /proc
mount -v -t sysfs sysfs /sys

# dpkg complains if $PATH is unset.
export PATH

# Debootstrap second-stage setup.  This part is hardcoded, since it's not
# entirely clear which parts of the system are usable before this is done.

echo 'debian stage1: running `debootstrap --second-stage`'
sed -i -e 's/systemd systemd-sysv //g' /debootstrap/required
/debootstrap/debootstrap --second-stage

# debootstrap unmounts /proc, /sys, and /dev/pts, so we have to re-mount them
mkdir -p /dev/pts
mount -v -t devpts devpts /dev/pts
mount -v -t proc proc /proc
mount -v -t sysfs sysfs /sys

# This is here because it was part of create_chroot's stage2 function.
apt-get remove -y --purge fakeroot libfakeroot

# We now have a fully functional Debian system, and can run the setup scripts.
echo 'debian stage1: `debootstrap --second-stage` done'

# Parse kernel command line arguments that are relevant to this script.
DEBIAN_REPO='file:///mnt/debian-repo'
MOUNT_TAG=virtfs

set -- $(cat /proc/cmdline)
for x in "$@"; do
    case "$x" in
        besspin.9p_mount_tag=*) MOUNT_TAG="${x#*=}" ;;
        besspin.debian_repo=*) DEBIAN_REPO="${x#*=}" ;;
        besspin.inet_addr=*) INET_ADDR="${x#*=}" ;;
        besspin.extra_setup=*) EXTRA_SETUP="${x#*=}" ;;
        besspin.set_clock=*) SET_CLOCK="${x#*=}" ;;
        besspin.sysvinit=*) SET_SYSVINIT="${x#*=}" ;;
    esac
done

echo "DEBIAN_REPO=$DEBIAN_REPO"
echo "INET_ADDR=$INET_ADDR"
echo "SET_CLOCK=$SET_CLOCK"
echo "SET_SYSVINIT=$SET_SYSVINIT"

# do we have a static IP provided?
if [ -n "$INET_ADDR" ]; then
    ip addr add dev eth1 "$INET_ADDR"
else
    dhclient -v eth1
fi

if [ -n "$SET_CLOCK" ]; then
    date -s "$SET_CLOCK"
fi

# Mount the virtual disk, which normally contains the debian repo.
#
# The virtual disk is expected to contain:
# - debian-repo/: a Debian repository snapshot, containing all the packages
#   that will be needed during setup
# - scripts/{setup_chroot.sh,setup_scripts/}: initramfs setup scripts copied
#   from gfe/debian/
mkdir -p /mnt
mount -v -t 9p "$MOUNT_TAG" /mnt

# Change the apt mirror path used for further `apt-get install` commands.  This
# happens only after setting up the network and the clock, so apt can access
# http mirrors and check release file timestamps.
echo "deb $DEBIAN_REPO sid main" >/etc/apt/sources.list
apt-get update -y


echo 'debian stage1: running setup scripts'

# create_chroot.sh stage3:
# $EXTRA_SETUP is run by setup_chroot.sh, if set
[ -n "$EXTRA_SETUP" ] && export EXTRA_SETUP
[ -n "$SET_SYSVINIT" ] && export SET_SYSVINIT
/mnt/scripts/setup_chroot.sh

# create_chroot.sh create_cpio:
echo 'debian stage1: creating cpio'
mount --bind / /root
(
    cd /root
    find . -print0 | cpio --null --create --format=newc >/mnt/debian-initramfs.cpio
)

echo 'debian stage1: done'
umount -v /mnt
poweroff -f
